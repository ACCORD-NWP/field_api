MODULE FIELD_UTIL_MODULE

#:set fieldTypeList = fieldType.getFieldTypeList ()

USE FIELD_MODULE
USE FIELD_ACCESS_MODULE

IMPLICIT NONE

#:for method in ['LOAD', 'SAVE', 'DIFF', 'COPY', 'WIPE', 'HOST']
INTERFACE ${method}$
#:for ft in fieldTypeList
  MODULE PROCEDURE ${ft.name}$_${method}$
#:if method not in ['DIFF']
  MODULE PROCEDURE ${ft.name}$_PTR_${method}$
  MODULE PROCEDURE ${ft.name}$_VIEW_${method}$
#:endif
#:endfor
END INTERFACE

#:endfor

CONTAINS

#:for ft in fieldTypeList
SUBROUTINE ${ft.name}$_LOAD (KLUN, YD)
INTEGER (KIND=JPIM), INTENT (IN) :: KLUN
CLASS (${ft.name}$), POINTER :: YD
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_SAVE (KLUN, YD)
INTEGER (KIND=JPIM), INTENT (IN) :: KLUN
CLASS (${ft.name}$), POINTER :: YD
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_DIFF (CDMESS, YD, YO)
CHARACTER (LEN=*), INTENT(IN) :: CDMESS
CLASS (${ft.name}$), POINTER :: YD, YO
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_COPY (SELF, LDCREATED)
CLASS (${ft.name}$), POINTER :: SELF
LOGICAL, INTENT (IN), OPTIONAL :: LDCREATED
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_WIPE (SELF, LDDELETED)
CLASS (${ft.name}$) :: SELF
LOGICAL, INTENT (IN), OPTIONAL :: LDDELETED
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_HOST (SELF)
CLASS (${ft.name}$), POINTER :: SELF

CALL SELF%SYNC_HOST_RDWR ()

END SUBROUTINE 

SUBROUTINE ${ft.name}$_VIEW_LOAD (KLUN, YD)
INTEGER (KIND=JPIM), INTENT (IN) :: KLUN
CLASS (${ft.name}$_VIEW) :: YD
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_VIEW_SAVE (KLUN, YD)
INTEGER (KIND=JPIM), INTENT (IN) :: KLUN
CLASS (${ft.name}$_VIEW) :: YD
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_VIEW_COPY (SELF, LDCREATED)
CLASS (${ft.name}$_VIEW) :: SELF
LOGICAL, INTENT (IN), OPTIONAL :: LDCREATED
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_VIEW_WIPE (SELF, LDDELETED)
CLASS (${ft.name}$_VIEW) :: SELF
LOGICAL, INTENT (IN), OPTIONAL :: LDDELETED
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_VIEW_HOST (SELF)
CLASS (${ft.name}$_VIEW) :: SELF
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_PTR_LOAD (KLUN, YD)
INTEGER (KIND=JPIM), INTENT (IN) :: KLUN
CLASS (${ft.name}$_PTR) :: YD
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_PTR_SAVE (KLUN, YD)
INTEGER (KIND=JPIM), INTENT (IN) :: KLUN
CLASS (${ft.name}$_PTR) :: YD
! Coming soon
STOP 1
END SUBROUTINE

SUBROUTINE ${ft.name}$_PTR_COPY (SELF, LDCREATED)
CLASS (${ft.name}$_PTR) :: SELF
LOGICAL, INTENT (IN), OPTIONAL :: LDCREATED
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_PTR_WIPE (SELF, LDDELETED)
CLASS (${ft.name}$_PTR) :: SELF
LOGICAL, INTENT (IN), OPTIONAL :: LDDELETED
! Coming soon
STOP 1
END SUBROUTINE 

SUBROUTINE ${ft.name}$_PTR_HOST (SELF)
CLASS (${ft.name}$_PTR) :: SELF

IF (ASSOCIATED (SELF%PTR)) THEN
  CALL HOST (SELF%PTR)
ENDIF

END SUBROUTINE 

#:endfor

END MODULE
