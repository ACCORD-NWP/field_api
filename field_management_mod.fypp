MODULE FIELD_MANAGEMENT_MOD

#:set fieldTypeList = fieldType.getFieldTypeList ()

USE FIELD_MODULE
${fieldType.useParkind1 ()}$

IMPLICIT NONE

PRIVATE

INTERFACE TEMPORARY_FIELD
#:for ft in fieldTypeList
  MODULE PROCEDURE TEMPORARY_${ft.name}$
#:endfor
END INTERFACE

PUBLIC :: TEMPORARY_FIELD

INTERFACE WRAP_FIELD
#:for ft in fieldTypeList
  MODULE PROCEDURE WRAP_${ft.name}$
#:endfor
END INTERFACE WRAP_FIELD

PUBLIC :: WRAP_FIELD

INTERFACE DELETE_FIELD
#:for ft in fieldTypeList
  MODULE PROCEDURE DELETE_${ft.name}$
#:endfor
END INTERFACE DELETE_FIELD

PUBLIC :: DELETE_FIELD

CONTAINS

#:for ft in fieldTypeList
SUBROUTINE TEMPORARY_${ft.name}$ (FIELD_PTR, UBOUNDS, LBOUNDS, PERSISTENT) 

CLASS(${ft.name}$), POINTER :: FIELD_PTR
TYPE(${ft.name}$_OWNER), POINTER :: FIELD_OWNER
INTEGER(KIND=JPIM), INTENT(IN) :: UBOUNDS (${ft.rank}$)
INTEGER(KIND=JPIM), OPTIONAL, INTENT(IN) :: LBOUNDS (${ft.rank}$)
LOGICAL, OPTIONAL, INTENT(IN) :: PERSISTENT

ALLOCATE (FIELD_OWNER)

CALL FIELD_OWNER%INIT (LBOUNDS=LBOUNDS, UBOUNDS=UBOUNDS, PERSISTENT=PERSISTENT)

FIELD_PTR => FIELD_OWNER

END SUBROUTINE TEMPORARY_${ft.name}$

SUBROUTINE WRAP_${ft.name}$ (FIELD_PTR, DATA, LBOUNDS, PERSISTENT) 

CLASS(${ft.name}$), POINTER :: FIELD_PTR
${ft.type}$, TARGET, INTENT (IN) :: DATA (${ft.shape}$)
TYPE(${ft.name}$_WRAPPER), POINTER :: FIELD_WRAPPER
INTEGER(KIND=JPIM), OPTIONAL, INTENT(IN) :: LBOUNDS (${ft.rank}$)
LOGICAL, OPTIONAL, INTENT(IN) :: PERSISTENT

ALLOCATE (FIELD_WRAPPER)

CALL FIELD_WRAPPER%INIT (DATA, LBOUNDS=LBOUNDS, PERSISTENT=PERSISTENT)

FIELD_PTR => FIELD_WRAPPER

END SUBROUTINE WRAP_${ft.name}$

SUBROUTINE DELETE_${ft.name}$ (FIELD_PTR)

CLASS(${ft.name}$), POINTER :: FIELD_PTR

CALL FIELD_PTR%FINAL ()
DEALLOCATE (FIELD_PTR)
NULLIFY (FIELD_PTR)

END SUBROUTINE DELETE_${ft.name}$

#:endfor

END MODULE
